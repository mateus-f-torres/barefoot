// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`VisibleTodoList Snapshot Test matches current production snapshot 1`] = `
.c2 {
  background-color: #233f4a;
  border: 1px solid #f1f1f1;
  color: white;
  margin: 0;
  padding: 0.8em 0.8em;
  height: 100%;
  text-align: center;
  -webkit-text-decoration: none;
  text-decoration: none;
  text-transform: capitalize;
  display: inline-block;
}

.c2:focus {
  outline: none;
  border: none;
  background-color: #345c6d;
}

.c2:hover {
  cursor: pointer;
  background-color: #345c6d;
}

.c2[type='submit'] {
  display: none;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  background-color: darkgrey;
  color: #1b1b1e;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  height: 45px;
  line-height: 45px;
}

.c4:nth-child(2n) {
  background-color: white;
  color: #666;
}

.c5 {
  display: inline-block;
  width: 100%;
  padding-left: 10px;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.c5:hover {
  cursor: pointer;
}

.c7 {
  display: inline-block;
  width: 100%;
  padding-left: 10px;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  -webkit-text-decoration: line-through;
  text-decoration: line-through;
}

.c7:hover {
  cursor: pointer;
}

.c6 {
  width: 30px;
  heigth: 30px;
  position: relative;
  bottom: 5px;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c1 {
  font-size: 18px;
  color: #1b1b1e;
  background-color: #f7f7f7;
  width: 100%;
  padding: 13px 13px 13px 20px;
  box-sizing: border-box;
  border: 3px solid rgba(0,0,0,0);
}

.c1:focus {
  outline: none;
}

.c3 {
  list-style: none;
  margin: 0;
  padding: 0;
}

<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(TodoList)>
    <TodoList
      addTodo={[Function]}
      removeTodo={[Function]}
      todos={
        Array [
          Object {
            "completed": false,
            "id": 0,
            "text": "mock1",
          },
          Object {
            "completed": true,
            "id": 1,
            "text": "mock2",
          },
          Object {
            "completed": false,
            "id": 2,
            "text": "mock3",
          },
        ]
      }
      toggleTodo={[Function]}
    >
      <TodoList__Form
        data-test="todo-submit"
        onSubmit={[Function]}
      >
        <StyledComponent
          data-test="todo-submit"
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "TodoList__Form-k2rkt5-0",
                "isStatic": true,
                "lastClassName": "c0",
                "rules": Array [
                  "display:flex;flex-direction:column;",
                ],
              },
              "displayName": "TodoList__Form",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "TodoList__Form-k2rkt5-0",
              "target": "form",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          onSubmit={[Function]}
        >
          <form
            className="c0"
            data-test="todo-submit"
            onSubmit={[Function]}
          >
            <TodoList__Input
              data-test="todo-input"
              placeholder="Add todo"
              type="text"
            >
              <StyledComponent
                data-test="todo-input"
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "TodoList__Input-k2rkt5-1",
                      "isStatic": true,
                      "lastClassName": "c1",
                      "rules": Array [
                        "font-size:18px;color:#1b1b1e;background-color:#f7f7f7;width:100%;padding:13px 13px 13px 20px;box-sizing:border-box;border:3px solid rgba(0,0,0,0);&:focus{outline:none;}",
                      ],
                    },
                    "displayName": "TodoList__Input",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "TodoList__Input-k2rkt5-1",
                    "target": "input",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                placeholder="Add todo"
                type="text"
              >
                <input
                  className="c1"
                  data-test="todo-input"
                  placeholder="Add todo"
                  type="text"
                />
              </StyledComponent>
            </TodoList__Input>
            <Button
              type="submit"
            >
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "Button-sc-51ojoz-0",
                      "isStatic": true,
                      "lastClassName": "c2",
                      "rules": Array [
                        "background-color:",
                        "#233f4a",
                        ";border:1px solid ",
                        "#f1f1f1",
                        ";color:white;margin:0;padding:0.8em 0.8em;height:100%;text-align:center;text-decoration:none;text-transform:capitalize;display:inline-block;&:focus{outline:none;border:none;background-color:",
                        "#345c6d",
                        ";}&:hover{cursor:pointer;background-color:",
                        "#345c6d",
                        ";}&[type='submit']{display:none;}",
                      ],
                    },
                    "displayName": "Button",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "Button-sc-51ojoz-0",
                    "target": "button",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                type="submit"
              >
                <button
                  className="c2"
                  type="submit"
                />
              </StyledComponent>
            </Button>
            <TodoList__List
              data-test="todo-list"
            >
              <StyledComponent
                data-test="todo-list"
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "TodoList__List-k2rkt5-2",
                      "isStatic": true,
                      "lastClassName": "c3",
                      "rules": Array [
                        "list-style:none;margin:0;padding:0;",
                      ],
                    },
                    "displayName": "TodoList__List",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "TodoList__List-k2rkt5-2",
                    "target": "ul",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
              >
                <ul
                  className="c3"
                  data-test="todo-list"
                >
                  <TodoItem
                    completed={false}
                    deleteTodo={[Function]}
                    id={0}
                    key="0"
                    text="mock1"
                    toggleTodo={[Function]}
                  >
                    <TodoItem__ListItem
                      id={0}
                    >
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "TodoItem__ListItem-sc-6y6wjd-0",
                              "isStatic": true,
                              "lastClassName": "c4",
                              "rules": Array [
                                "display:flex;background-color:darkgrey;color:#1b1b1e;justify-content:space-between;align-items:center;height:45px;line-height:45px;&:nth-child(2n){background-color:white;color:#666;}",
                              ],
                            },
                            "displayName": "TodoItem__ListItem",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "TodoItem__ListItem-sc-6y6wjd-0",
                            "target": "li",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        id={0}
                      >
                        <li
                          className="c4"
                          id={0}
                        >
                          <TodoItem__ListItemText
                            data-test="todo-text"
                            done={false}
                            onClick={[Function]}
                          >
                            <StyledComponent
                              data-test="todo-text"
                              done={false}
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "TodoItem__ListItemText-sc-6y6wjd-1",
                                    "isStatic": false,
                                    "lastClassName": "c5",
                                    "rules": Array [
                                      "display:inline-block;width:100%;padding-left:10px;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;text-decoration:",
                                      [Function],
                                      ";&:hover{cursor:pointer;}",
                                    ],
                                  },
                                  "displayName": "TodoItem__ListItemText",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "TodoItem__ListItemText-sc-6y6wjd-1",
                                  "target": "p",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              onClick={[Function]}
                            >
                              <p
                                className="c5"
                                data-test="todo-text"
                                onClick={[Function]}
                              >
                                mock1
                              </p>
                            </StyledComponent>
                          </TodoItem__ListItemText>
                          <Button
                            data-test="todo-delete"
                            onClick={[Function]}
                          >
                            <StyledComponent
                              data-test="todo-delete"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "Button-sc-51ojoz-0",
                                    "isStatic": true,
                                    "lastClassName": "c2",
                                    "rules": Array [
                                      "background-color:",
                                      "#233f4a",
                                      ";border:1px solid ",
                                      "#f1f1f1",
                                      ";color:white;margin:0;padding:0.8em 0.8em;height:100%;text-align:center;text-decoration:none;text-transform:capitalize;display:inline-block;&:focus{outline:none;border:none;background-color:",
                                      "#345c6d",
                                      ";}&:hover{cursor:pointer;background-color:",
                                      "#345c6d",
                                      ";}&[type='submit']{display:none;}",
                                    ],
                                  },
                                  "displayName": "Button",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "Button-sc-51ojoz-0",
                                  "target": "button",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              onClick={[Function]}
                            >
                              <button
                                className="c2"
                                data-test="todo-delete"
                                onClick={[Function]}
                              >
                                <TodoItem__ListItemIcon
                                  src={
                                    Object {
                                      "process": [Function],
                                    }
                                  }
                                >
                                  <StyledComponent
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "TodoItem__ListItemIcon-sc-6y6wjd-2",
                                          "isStatic": true,
                                          "lastClassName": "c6",
                                          "rules": Array [
                                            "width:30px;heigth:30px;position:relative;bottom:5px;",
                                          ],
                                        },
                                        "displayName": "TodoItem__ListItemIcon",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "TodoItem__ListItemIcon-sc-6y6wjd-2",
                                        "target": "img",
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                    src={
                                      Object {
                                        "process": [Function],
                                      }
                                    }
                                  >
                                    <img
                                      className="c6"
                                      src={
                                        Object {
                                          "process": [Function],
                                        }
                                      }
                                    />
                                  </StyledComponent>
                                </TodoItem__ListItemIcon>
                              </button>
                            </StyledComponent>
                          </Button>
                        </li>
                      </StyledComponent>
                    </TodoItem__ListItem>
                  </TodoItem>
                  <TodoItem
                    completed={true}
                    deleteTodo={[Function]}
                    id={1}
                    key="1"
                    text="mock2"
                    toggleTodo={[Function]}
                  >
                    <TodoItem__ListItem
                      id={1}
                    >
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "TodoItem__ListItem-sc-6y6wjd-0",
                              "isStatic": true,
                              "lastClassName": "c4",
                              "rules": Array [
                                "display:flex;background-color:darkgrey;color:#1b1b1e;justify-content:space-between;align-items:center;height:45px;line-height:45px;&:nth-child(2n){background-color:white;color:#666;}",
                              ],
                            },
                            "displayName": "TodoItem__ListItem",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "TodoItem__ListItem-sc-6y6wjd-0",
                            "target": "li",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        id={1}
                      >
                        <li
                          className="c4"
                          id={1}
                        >
                          <TodoItem__ListItemText
                            data-test="todo-text"
                            done={true}
                            onClick={[Function]}
                          >
                            <StyledComponent
                              data-test="todo-text"
                              done={true}
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "TodoItem__ListItemText-sc-6y6wjd-1",
                                    "isStatic": false,
                                    "lastClassName": "c5",
                                    "rules": Array [
                                      "display:inline-block;width:100%;padding-left:10px;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;text-decoration:",
                                      [Function],
                                      ";&:hover{cursor:pointer;}",
                                    ],
                                  },
                                  "displayName": "TodoItem__ListItemText",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "TodoItem__ListItemText-sc-6y6wjd-1",
                                  "target": "p",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              onClick={[Function]}
                            >
                              <p
                                className="c7"
                                data-test="todo-text"
                                onClick={[Function]}
                              >
                                mock2
                              </p>
                            </StyledComponent>
                          </TodoItem__ListItemText>
                          <Button
                            data-test="todo-delete"
                            onClick={[Function]}
                          >
                            <StyledComponent
                              data-test="todo-delete"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "Button-sc-51ojoz-0",
                                    "isStatic": true,
                                    "lastClassName": "c2",
                                    "rules": Array [
                                      "background-color:",
                                      "#233f4a",
                                      ";border:1px solid ",
                                      "#f1f1f1",
                                      ";color:white;margin:0;padding:0.8em 0.8em;height:100%;text-align:center;text-decoration:none;text-transform:capitalize;display:inline-block;&:focus{outline:none;border:none;background-color:",
                                      "#345c6d",
                                      ";}&:hover{cursor:pointer;background-color:",
                                      "#345c6d",
                                      ";}&[type='submit']{display:none;}",
                                    ],
                                  },
                                  "displayName": "Button",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "Button-sc-51ojoz-0",
                                  "target": "button",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              onClick={[Function]}
                            >
                              <button
                                className="c2"
                                data-test="todo-delete"
                                onClick={[Function]}
                              >
                                <TodoItem__ListItemIcon
                                  src={
                                    Object {
                                      "process": [Function],
                                    }
                                  }
                                >
                                  <StyledComponent
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "TodoItem__ListItemIcon-sc-6y6wjd-2",
                                          "isStatic": true,
                                          "lastClassName": "c6",
                                          "rules": Array [
                                            "width:30px;heigth:30px;position:relative;bottom:5px;",
                                          ],
                                        },
                                        "displayName": "TodoItem__ListItemIcon",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "TodoItem__ListItemIcon-sc-6y6wjd-2",
                                        "target": "img",
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                    src={
                                      Object {
                                        "process": [Function],
                                      }
                                    }
                                  >
                                    <img
                                      className="c6"
                                      src={
                                        Object {
                                          "process": [Function],
                                        }
                                      }
                                    />
                                  </StyledComponent>
                                </TodoItem__ListItemIcon>
                              </button>
                            </StyledComponent>
                          </Button>
                        </li>
                      </StyledComponent>
                    </TodoItem__ListItem>
                  </TodoItem>
                  <TodoItem
                    completed={false}
                    deleteTodo={[Function]}
                    id={2}
                    key="2"
                    text="mock3"
                    toggleTodo={[Function]}
                  >
                    <TodoItem__ListItem
                      id={2}
                    >
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "TodoItem__ListItem-sc-6y6wjd-0",
                              "isStatic": true,
                              "lastClassName": "c4",
                              "rules": Array [
                                "display:flex;background-color:darkgrey;color:#1b1b1e;justify-content:space-between;align-items:center;height:45px;line-height:45px;&:nth-child(2n){background-color:white;color:#666;}",
                              ],
                            },
                            "displayName": "TodoItem__ListItem",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "TodoItem__ListItem-sc-6y6wjd-0",
                            "target": "li",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        id={2}
                      >
                        <li
                          className="c4"
                          id={2}
                        >
                          <TodoItem__ListItemText
                            data-test="todo-text"
                            done={false}
                            onClick={[Function]}
                          >
                            <StyledComponent
                              data-test="todo-text"
                              done={false}
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "TodoItem__ListItemText-sc-6y6wjd-1",
                                    "isStatic": false,
                                    "lastClassName": "c5",
                                    "rules": Array [
                                      "display:inline-block;width:100%;padding-left:10px;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;text-decoration:",
                                      [Function],
                                      ";&:hover{cursor:pointer;}",
                                    ],
                                  },
                                  "displayName": "TodoItem__ListItemText",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "TodoItem__ListItemText-sc-6y6wjd-1",
                                  "target": "p",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              onClick={[Function]}
                            >
                              <p
                                className="c5"
                                data-test="todo-text"
                                onClick={[Function]}
                              >
                                mock3
                              </p>
                            </StyledComponent>
                          </TodoItem__ListItemText>
                          <Button
                            data-test="todo-delete"
                            onClick={[Function]}
                          >
                            <StyledComponent
                              data-test="todo-delete"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "Button-sc-51ojoz-0",
                                    "isStatic": true,
                                    "lastClassName": "c2",
                                    "rules": Array [
                                      "background-color:",
                                      "#233f4a",
                                      ";border:1px solid ",
                                      "#f1f1f1",
                                      ";color:white;margin:0;padding:0.8em 0.8em;height:100%;text-align:center;text-decoration:none;text-transform:capitalize;display:inline-block;&:focus{outline:none;border:none;background-color:",
                                      "#345c6d",
                                      ";}&:hover{cursor:pointer;background-color:",
                                      "#345c6d",
                                      ";}&[type='submit']{display:none;}",
                                    ],
                                  },
                                  "displayName": "Button",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "Button-sc-51ojoz-0",
                                  "target": "button",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              onClick={[Function]}
                            >
                              <button
                                className="c2"
                                data-test="todo-delete"
                                onClick={[Function]}
                              >
                                <TodoItem__ListItemIcon
                                  src={
                                    Object {
                                      "process": [Function],
                                    }
                                  }
                                >
                                  <StyledComponent
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "TodoItem__ListItemIcon-sc-6y6wjd-2",
                                          "isStatic": true,
                                          "lastClassName": "c6",
                                          "rules": Array [
                                            "width:30px;heigth:30px;position:relative;bottom:5px;",
                                          ],
                                        },
                                        "displayName": "TodoItem__ListItemIcon",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "TodoItem__ListItemIcon-sc-6y6wjd-2",
                                        "target": "img",
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                    src={
                                      Object {
                                        "process": [Function],
                                      }
                                    }
                                  >
                                    <img
                                      className="c6"
                                      src={
                                        Object {
                                          "process": [Function],
                                        }
                                      }
                                    />
                                  </StyledComponent>
                                </TodoItem__ListItemIcon>
                              </button>
                            </StyledComponent>
                          </Button>
                        </li>
                      </StyledComponent>
                    </TodoItem__ListItem>
                  </TodoItem>
                </ul>
              </StyledComponent>
            </TodoList__List>
          </form>
        </StyledComponent>
      </TodoList__Form>
    </TodoList>
  </Connect(TodoList)>
</Provider>
`;
