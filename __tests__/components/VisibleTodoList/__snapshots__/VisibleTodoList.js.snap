// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`VisibleTodoList Snapshot Test matches current production snapshot 1`] = `
.c2 {
  background-color: #233f4a;
  border: 1px solid #f1f1f1;
  color: white;
  margin: 0;
  padding: 0.8em 0.8em;
  height: 100%;
  text-align: center;
  -webkit-text-decoration: none;
  text-decoration: none;
  text-transform: capitalize;
  display: inline-block;
}

.c2:focus {
  outline: none;
  border: none;
}

.c2:hover {
  cursor: pointer;
  background-color: #345c6d;
}

.c2[type='submit'] {
  display: none;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  background-color: darkgrey;
  color: #1b1b1e;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  height: 45px;
  line-height: 45px;
}

.c4:nth-child(2n) {
  background-color: white;
  color: #666;
}

.c5 {
  display: inline-block;
  width: 100%;
  padding-left: 10px;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.c5:hover {
  cursor: pointer;
}

.c6 {
  display: inline-block;
  width: 100%;
  padding-left: 10px;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  -webkit-text-decoration: line-through;
  text-decoration: line-through;
}

.c6:hover {
  cursor: pointer;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c1 {
  font-size: 18px;
  color: #1b1b1e;
  background-color: #f7f7f7;
  width: 100%;
  padding: 13px 13px 13px 20px;
  box-sizing: border-box;
  border: 3px solid rgba(0,0,0,0);
}

.c1:focus {
  border: 3px solid #1b3039;
  outline: none;
}

.c3 {
  list-style: none;
  margin: 0;
  padding: 0;
}

<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(TodoList)>
    <TodoList
      addTodo={[Function]}
      removeTodo={[Function]}
      todos={
        Array [
          Object {
            "completed": false,
            "id": 0,
            "text": "mock1",
          },
          Object {
            "completed": true,
            "id": 1,
            "text": "mock2",
          },
          Object {
            "completed": false,
            "id": 2,
            "text": "mock3",
          },
        ]
      }
      toggleTodo={[Function]}
    >
      <TodoList__Form
        data-test="todo-submit"
        onSubmit={[Function]}
      >
        <form
          className="c0"
          data-test="todo-submit"
          onSubmit={[Function]}
        >
          <TodoList__Input
            data-test="todo-input"
            placeholder="Add todo"
            type="text"
          >
            <input
              className="c1"
              data-test="todo-input"
              placeholder="Add todo"
              type="text"
            />
          </TodoList__Input>
          <Button
            type="submit"
          >
            <button
              className="c2"
              type="submit"
            />
          </Button>
          <TodoList__List
            data-test="todo-list"
          >
            <ul
              className="c3"
              data-test="todo-list"
            >
              <TodoItem
                completed={false}
                deleteTodo={[Function]}
                id={0}
                key="0"
                text="mock1"
                toggleTodo={[Function]}
              >
                <TodoItem__ListItem
                  id={0}
                >
                  <li
                    className="c4"
                    id={0}
                  >
                    <TodoItem__ListItemText
                      data-test="todo-text"
                      done={false}
                      onClick={[Function]}
                    >
                      <p
                        className="c5"
                        data-test="todo-text"
                        onClick={[Function]}
                      >
                        mock1
                      </p>
                    </TodoItem__ListItemText>
                    <Button
                      data-test="todo-delete"
                      onClick={[Function]}
                    >
                      <button
                        className="c2"
                        data-test="todo-delete"
                        onClick={[Function]}
                      >
                        delete
                      </button>
                    </Button>
                  </li>
                </TodoItem__ListItem>
              </TodoItem>
              <TodoItem
                completed={true}
                deleteTodo={[Function]}
                id={1}
                key="1"
                text="mock2"
                toggleTodo={[Function]}
              >
                <TodoItem__ListItem
                  id={1}
                >
                  <li
                    className="c4"
                    id={1}
                  >
                    <TodoItem__ListItemText
                      data-test="todo-text"
                      done={true}
                      onClick={[Function]}
                    >
                      <p
                        className="c6"
                        data-test="todo-text"
                        onClick={[Function]}
                      >
                        mock2
                      </p>
                    </TodoItem__ListItemText>
                    <Button
                      data-test="todo-delete"
                      onClick={[Function]}
                    >
                      <button
                        className="c2"
                        data-test="todo-delete"
                        onClick={[Function]}
                      >
                        delete
                      </button>
                    </Button>
                  </li>
                </TodoItem__ListItem>
              </TodoItem>
              <TodoItem
                completed={false}
                deleteTodo={[Function]}
                id={2}
                key="2"
                text="mock3"
                toggleTodo={[Function]}
              >
                <TodoItem__ListItem
                  id={2}
                >
                  <li
                    className="c4"
                    id={2}
                  >
                    <TodoItem__ListItemText
                      data-test="todo-text"
                      done={false}
                      onClick={[Function]}
                    >
                      <p
                        className="c5"
                        data-test="todo-text"
                        onClick={[Function]}
                      >
                        mock3
                      </p>
                    </TodoItem__ListItemText>
                    <Button
                      data-test="todo-delete"
                      onClick={[Function]}
                    >
                      <button
                        className="c2"
                        data-test="todo-delete"
                        onClick={[Function]}
                      >
                        delete
                      </button>
                    </Button>
                  </li>
                </TodoItem__ListItem>
              </TodoItem>
            </ul>
          </TodoList__List>
        </form>
      </TodoList__Form>
    </TodoList>
  </Connect(TodoList)>
</Provider>
`;
